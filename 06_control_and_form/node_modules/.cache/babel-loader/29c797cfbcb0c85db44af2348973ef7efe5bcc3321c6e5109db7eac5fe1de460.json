{"ast":null,"code":"var _jsxFileName = \"/Users/kohtakochi/Desktop/programming/lang/lastReact/06_control_and_form/src/100_single_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [isChecked, setIsChecked] = useState(true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"my-check\",\n        children: \"\\u30C1\\u30A7\\u30C3\\u30AF :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        id: \"my-check\",\n        checked: isChecked,\n        onChange: e => setIsChecked(prevState => !prevState)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: isChecked ? \"ON!\" : \"OFF!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Example, \"q68eTZ62AYdTxuW0/uv+R2rihi4=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","isChecked","setIsChecked","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","checked","onChange","e","prevState","_c","$RefreshReg$"],"sources":["/Users/kohtakochi/Desktop/programming/lang/lastReact/06_control_and_form/src/100_single_checkbox/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n  const [isChecked, setIsChecked] = useState(true);\n  return (\n    <>\n      <div>\n        <label htmlFor=\"my-check\">チェック :</label>\n        <input\n          type=\"checkbox\"\n          id=\"my-check\"\n          checked={isChecked}\n          onChange={(e) => setIsChecked((prevState) => !prevState)}\n        />\n        <div>{isChecked ? \"ON!\" : \"OFF!\"}</div>\n      </div>\n    </>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,oBACEE,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAOQ,OAAO,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCZ,OAAA;QACEa,IAAI,EAAC,UAAU;QACfC,EAAE,EAAC,UAAU;QACbC,OAAO,EAAEV,SAAU;QACnBW,QAAQ,EAAGC,CAAC,IAAKX,YAAY,CAAEY,SAAS,IAAK,CAACA,SAAS;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACFZ,OAAA;QAAAO,QAAA,EAAMF,SAAS,GAAG,KAAK,GAAG;MAAM;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACR,EAAA,CAhBID,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAkBb,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}